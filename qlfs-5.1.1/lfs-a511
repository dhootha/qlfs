#!/bin/bash
#****************************************************************************
#               QLFS-511-fianl http://lfs-italia.homelinux.org              #
#                                                                           #
#      Copyright (C) 2005 Matteo Mattei   matteo.mattei@gmail.com           #
#                         Marco Sciatta   marco.sciatta@gmail.com           #
#                                                                           #
# This program is free software; you can redistribute it and/or modify      #
# it under the terms of the GNU General Public License as published by      #
# the Free Software Foundation; either version 2 of the License, or         #
# (at your option) any later version.                                       #
#                                                                           #
# This program is distributed in the hope that it will be useful,           #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU General Public License for more details.                              #
#                                                                           #
# You should have received a copy of the GNU General Public License         #
# along with this program; if not, write to the Free Software               #
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA #
#                                                                           #
#****************************************************************************

# Attenzione l'estenzione e' ".tar.bz2"
# non c'e' bisogno del source.
# tutti i file includono infatti lfs-var.
#source ./lfs-var

#DEBUG
echo "Check  : $check_control"
echo "Stripping : $execute_stripping"
echo "Partizione lfs : $hdax"
sleep 3
#END DEBUG

EXIT_SUCCESS=0 
#expot PATH=/tools/bin:/bin:/usr/bin
#export LC_ALL=POSIX
##
#Alcune vengono utilizzate ma solo per i nomi nelle funzioni .
#Il vengono cmq scaricati da lfs-italia.org .
#Non cancellare !!
autoconf="autoconf-2.59"  
automake="automake-1.8.4"
bash_p="bash-2.05b-2.patch"
bash="bash-2.05b"
binutils="binutils-2.14" 
bison_p="bison-1.875-attribute.patch"
bison="bison-1.875"
bzip2="bzip2-1.0.2"
coreutils_p="coreutils-5.2.1-hostname-1.patch"
coreutils_p2="coreutils-5.2.1-uname-1.patch"
coreutils="coreutils-5.2.1"
dejagnu="dejagnu-1.4.4"
diffutils="diffutils-2.8.1"
e2fsprogs="e2fsprogs-1.35"
ed_p="ed-0.2-mkstemp.patch"
ed="ed-0.2"
expect_p="expect-5.41.0-spawn-1.patch"
expect="expect-5.41.0"
file="file-4.09"
findutils="findutils-4.1.20"
flex="flex-2.5.4a"
gawk="gawk-3.1.3"
gcc2_p="gcc-2.95.3-2.patch"
gcc2_p2="gcc-2.95.3-no-fixinc.patch"
gcc2_p3="gcc-2.95.3-returntype-fix.patch"
gcc2="gcc-2.95.3"
gcc3_p="gcc-3.3.3-no_fixincludes-1.patch"
gcc3_p1="gcc-3.3.3-specs-1.patch"
gcc3_core="gcc-core-3.3.3"
gcc3_g="gcc-g++-3.3.3"
gcc3_testsuite="gcc-testsuite-3.3.3"
gettext="gettext-0.14.1"
glibc="glibc-2.3.3-lfs-5.1"
grep="grep-2.5.1"
groff="groff-1.19"
grub="grub-0.94"
gzip="gzip-1.3.5"
iana_etc="iana-etc-1.00"
inetutils_p="inetutils-1.4.2-no_server_man_pages-1.patch"
inetutils="inetutils-1.4.2"
kbd_p="kbd-1.12-more-programs-1.patch"
kbd="kbd-1.12"
less="less-382"
lfs_bootscript="lfs-bootscripts-2.0.5"
libtool="libtool-1.5.6"
linux="linux-2.4.26"
m4="m4-1.4"
make="make-3.80"
make_devices="make_devices-1.2.bz2"    #.bz2!!!!
man_p="man-1.5m2-80cols.patch"
man="man-1.5m2"
man_pages="man-pages-1.66"
mktemp_p="mktemp-1.5-add-tempfile-1.patch"
mktemp="mktemp-1.5"
modutils="modutils-2.4.27"
ncurses="ncurses-5.4"
net_tools_p="net-tools-1.60-miitool-gcc33-1.patch"
net_tools="net-tools-1.60"
patch="patch-2.5.4"
perl_p="perl-5.8.4-libc-1.patch"
perl="perl-5.8.4"
procinfo="procinfo-18"
procps="procps-3.2.1"
psmisc="psmisc-21.4"
sed="sed-4.0.9"
shadow="shadow-4.0.4.1"
sysklogd="sysklogd-1.4.1"
sysvinit="sysvinit-2.85"
tar="tar-1.13.94"
tcl="tcl8.4.6-src"
texinfo="texinfo-4.7"
util_linux="util-linux-2.12a"
vim="vim-6.2"
zlib="zlib-1.2.1"

function binutils1_host()
{
	echo "binutils" > /mio
	echo $(echo $COLOR_GREEN_LIGHT)"########################"
	echo "# $binutils -PASSO1"
	echo "########################"$(echo $COLOR_CYAN)
	cd $LFS"/sources" && \
	tar xfj $binutils.tar.bz2 && \
	cd $binutils && \
	mkdir ../binutils-build && \
	cd ../binutils-build && \
	../$binutils/configure --prefix=/tools --disable-nls && \
	make configure-host && \
	make LDFLAGS="-all-static" && \
	make install && \
	make -C ld clean && \
	make -C ld LDFLAGS="-all-static" LIB_PATH=/tools/lib && \
	echo "binutils" >> /mio

}

function gcc31_host()
{
	echo "gcc_1" >> /mio
	echo $(echo $COLOR_GREEN_LIGHT)"##################"
	echo "# $gcc3_core-PASSO1"
	echo "##################"$(echo $COLOR_CYAN)
	cd $LFS"/sources" && \
	tar xfj $gcc3_core.tar.bz2 && cd gcc-3.3.3 && \
	#######################################################################################
	# Inizio procedura per sistemare il configure con versioni di bash superiori alla 3.00
	#######################################################################################
	if [ $gccsed = "yes" ]
	then
		sed -e 's@trap 0@  trap - 0@g' configure > configure.new
		rm configure
		mv configure.new configure
		chmod +x configure
	fi
	####################################################################################
	# Fine procedura per sistemare il configure con versioni di bash superiori alla 3.00
	####################################################################################
	mkdir ../gcc-build && \
	cd ../gcc-build && \
	../gcc-3.3.3/configure --prefix=/tools --with-local-prefix=/tools --disable-nls --enable-shared --enable-languages=c && \
	make BOOT_LDFLAGS="-static" bootstrap && \
	make install && \
	# ln non �stato eseguito.. ma non sembra ci siano errori
	ln -s gcc /tools/bin/cc && \
	echo "gcc_1" >> /mio

}

function linuxheader_host()
{
	echo "linux" >> /mio
	echo $(echo $COLOR_GREEN_LIGHT)"######################" && \
	echo "# $linux headers" && \
	echo "######################"$(echo $COLOR_CYAN) && \
	cd $LFS"/sources" && \
	tar xfj $linux.tar.bz2 && \
	cd $linux && \
	make mrproper && \
	make include/linux/version.h && \
	make symlinks && \
	mkdir /tools/include/asm && \
	cp include/asm/* /tools/include/asm && \
	cp -R include/asm-generic /tools/include && \
	cp -R include/linux /tools/include && \
	echo "linux" >> /mio
	return $EXIT_SUCCESS
	
}

function glibc_host() 
{
	echo "glib" >> /mio
	echo $(echo $COLOR_GREEN_LIGHT)"#####################"
	echo "# $glibc "
	echo "#####################"$(echo $COLOR_CYAN)
	cd $LFS"/sources" && \
	tar xfj $glibc.tar.bz2 && cd $glibc && \
	mkdir ../glibc-build && \
	cd ../glibc-build && \
	../$glibc/configure --prefix=/tools --disable-profile --enable-add-ons=linuxthreads --with-binutils=/tools/bin --with-headers=/tools/include  --without-gd --without-cvs && \
	make AUTOCONF=no && \
	if [[ $check_control = "true" ]]
	then 
		echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
		echo "# Make check in corso:  " && \
		echo "########################"$(echo $COLOR_CYAN)
	 	make check  
	fi
	mkdir /tools/etc && \
	touch /tools/etc/ld.so.conf && \
	make install && \
	# make localedata/install-locales && \ <--------------TOLTI I LOCALES
	echo "glib" >> /mio
	return $EXIT_SUCCESS

}

function toolchain_host()
{

	echo "chain" >> /mio
	echo $(echo $COLOR_GREEN_LIGHT)"############################" && \
	echo "# SISTEMAZIONE DEI TOOLCHAIN" && \
	echo "############################"$(echo $COLOR_CYAN) && \
	cd $LFS"/sources" && \
	cd binutils-build && \
	make -C ld install && \

	SPECFILE=/tools/lib/gcc-lib/*/*/specs &&
	sed -e 's@ /lib/ld-linux.so.2@ /tools/lib/ld-linux.so.2@g' \
    	$SPECFILE > tempspecfile &&
	mv -f tempspecfile $SPECFILE &&
	unset SPECFILE

	# ( Se sul proprio sistema il nome del linker dinamico �qualcosa di diverso
	# da ld-linux.so.2, �necessario sostituire ld-linux.so.2 nello specfile con 
	# il nome del linker del proprio sistema)
	
	rm -f /tools/lib/gcc-lib/*/*/include/{pthread.h,bits/sigthread.h} && \

	#echo 'main(){}' > dummy.c
	#cc dummy.c
	#readelf -l a.out | grep ': /tools'
	# Se l'output �simile a : 
	# [Requesting program interpreter: /tools/lib/ld-linux.so.2]
	# Si pu�continuare con l'istallazione.
	# (L'importante �che ci sia il prefisso /tools/lib)
	#rm dummy.c a.out

	# PER RIPRISTINARE CC
	unset CC && \
	echo "chain" >> /mio
	return $EXIT_SUCCESS
}

function tcl_host()
{
	echo "tcl" >> /mio
	echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
	echo "# tcl " && \
	echo "###########"$(echo $COLOR_CYAN) && \
	cd $LFS"/sources" && \
	tar xfj $tcl.tar.bz2 && \
	cd tcl8.4.6 && \
	cd unix && \
	./configure --prefix=/tools && \
	make && \
	make install && \
	ln -s tclsh8.4 /tools/bin/tclsh  && \
	echo "tcl" >> /mio
	return $EXIT_SUCCESS
}

function expect_host()
{
echo "exp" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# $expect" && \
echo "###############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj $expect.tar.bz2 && \
cd expect-5.41 && \
patch -Np1 -i ../expect-5.41.0-spawn-1.patch && \
./configure --prefix=/tools --with-tcl=/tools/lib --with-x=no && \
make && \
make SCRIPTS="" install && \
echo "exp" >> /mio
return $EXIT_SUCCESS

}

function dejagnu_host()
{
echo "deja" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# DejaGnu-1.4.4" && \
echo "###############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj dejagnu-1.4.4.tar.bz2 && \
cd dejagnu-1.4.4 && \
./configure --prefix=/tools && \
make install && \
echo "deja" >> /mio
return $EXIT_SUCCESS
}

function gcc32_host()
{
echo "gcc3" >> /mio
set CC="gcc -B/usr/bin" && \
echo $(echo $COLOR_GREEN_LIGHT)"####################" && \
echo "# GCC-3.3.3- PASSO 2" && \
echo "####################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
rm -r gcc-3.3.3 gcc-build && \
tar xfj gcc-core-3.3.3.tar.bz2 && \
tar xfj gcc-g++-3.3.3.tar.bz2 && \
tar xfj gcc-testsuite-3.3.3.tar.bz2 && \
cd gcc-3.3.3 && \
patch -Np1 -i ../gcc-3.3.3-no_fixincludes-1.patch && \
patch -Np1 -i ../gcc-3.3.3-specs-1.patch && \
# <Questa procedura risolve il bug con bash 3.00 o superiore>
if [[ $gccsed = "yes" ]]
 then
 sed -e 's@trap 0@  trap - 0@g' configure > configure.new
 rm configure
 mv configure.new configure
 chmod +x configure
fi
# </Questa procedura risolve il bug con bash 3.00 o superiore>
mkdir ../gcc-build && \
cd ../gcc-build && \
../gcc-3.3.3/configure --prefix=/tools --with-local-prefix=/tools \
--enable-clocale=gnu --enable-shared --enable-threads=posix \
--enable-__cxa_atexit --enable-languages=c,c++ && \
make && \

if [[ $check_control = "true" ]]
then 
	echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	echo "# Make check in corso:  " && \
	echo "########################"$(echo $COLOR_CYAN)
	make -k check  
fi
# $COMMENT "make -k check >> ~/log_gcc_check.txt && \" #commentare per velocizzare il tutto
# CONTROLLARE IL RISULTATO DEL TEST
#../gcc-3.3.3/contrib/test_summary | grep -A7 Summ >> ~/testsummary_gcc.txt  #commentare per velocizzare il tutto
make install && \
echo "gcc3" >> /mio
return $EXIT_SUCCESS
}

function binutils2_host()
{
echo "binu" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
echo "# Binutils-2.14-PASSO 2 " && \
echo "########################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
chmod 777 -R binutils-build && \
rm -r binutils-build binutils-2.14 && \
tar xfj binutils-2.14.tar.bz2 && \
cd binutils-2.14 && \
mkdir ../binutils-build && \
cd ../binutils-build && \
../binutils-2.14/configure --prefix=/tools --enable-shared --with-lib-path=/tools/lib && \
make && \
if [ $check_control = "true" ]
then
	echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	echo "# Make check in corso:  " && \
	echo "########################"$(echo $COLOR_CYAN)
	echo 	
	make -k check
fi
#$COMMENT "make -k check && \"
echo "pronto per la compilazione" && \
make install && \
make -C ld clean && \
make -C ld LIB_PATH=/usr/lib:/lib && \

# RIPRISTINO CC
unset CC && \
echo "binu" >> /mio
return $EXIT_SUCCESS
}

function gawk_host()
{
echo "ga" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Gawk-3.1.3" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj gawk-3.1.3.tar.bz2 && \
cd gawk-3.1.3 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "ga" >> /mio
return $EXIT_SUCCESS

}

function coreutils_host()
{
echo "core" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#################" && \
echo "# Coreutils-5.2.1" && \
echo "#################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj coreutils-5.2.1.tar.bz2 && \
cd coreutils-5.2.1 && \
DEFAULT_POSIX2_VERSION=199209 ./configure --prefix=/tools && \
make && \
make install && \
echo "core" >> /mio
return $EXIT_SUCCESS
}

function bzip2_host()
{
echo "bzi" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Bzip2-1.0.2" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj bzip2-1.0.2.tar.bz2 && \
cd bzip2-1.0.2 && \
make PREFIX=/tools install && \
echo "bzi" >> /mio
return $EXIT_SUCCESS
}

function gzip_host()
{
echo "gzi" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# Gzip-1.3.5" && \
echo "############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj gzip-1.3.5.tar.bz2 && \
cd gzip-1.3.5 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "gzi" >> /mio
return $EXIT_SUCCESS
}

function diffutils_host()
{
echo "diffi" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#################" && \
echo "# Diffutils-2.8.1" && \
echo "#################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj diffutils-2.8.1.tar.bz2 && \
cd diffutils-2.8.1 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "diffi" >> /mio
return $EXIT_SUCCESS
}

function findutils_host()
{
echo "fin" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##################" && \
echo "# Findutils-4.1.20" && \
echo "##################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj findutils-4.1.20.tar.bz2 && \
cd findutils-4.1.20 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "fin" >> /mio
return $EXIT_SUCCESS
}

function make_host()
{
echo "make" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Make-3.80" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj make-3.80.tar.bz2 && \
cd make-3.80 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "make" >> /mio
return $EXIT_SUCCESS
}

function grep_host()
{
echo "grep" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# Grep-2.5.1" && \
echo "############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj grep-2.5.1.tar.bz2 && \
cd grep-2.5.1 && \
./configure --prefix=/tools --disable-perl-regexp --with-included-regex && \
make && \
make install && \
echo "grep" >> /mio
return $EXIT_SUCCESS
}

function sed_host()
{
echo "sed" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Sed-4.0.9" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj sed-4.0.9.tar.bz2 && \
cd sed-4.0.9 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "sed" >> /mio
return $EXIT_SUCCESS
}
function gettext_host()
{
echo "gettext" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# Gettxt-0.14.1" && \
echo "###############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj gettext-0.14.1.tar.bz2 && \
cd gettext-0.14.1 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "gettext" >> /mio
return $EXIT_SUCCESS
}

function ncurses_host()
{
echo "ncu" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Ncurses-5.4" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj ncurses-5.4.tar.bz2 && \
cd ncurses-5.4 && \
./configure --prefix=/tools --with-shared --without-debug --without-ada --enable-overwrite && \
make && \
make install && \
echo "ncu" >> /mio
return $EXIT_SUCCESS
}
function patch_host()
{
echo "patch" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Patch-2.5.4" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj patch-2.5.4.tar.bz2 && \
cd patch-2.5.4 && \
CPPFLAGS=-D_GNU_SOURCE ./configure --prefix=/tools && \
make && \
make install && \
echo "patch" >> /mio
return $EXIT_SUCCESS
}

function tar_host()
{
echo "tar" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Tar-1.13.94" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj tar-1.13.94.tar.bz2 && \
cd tar-1.13.94 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "tar" >> /mio
return $EXIT_SUCCESS
}

function texinfo_host()
{
echo "texinf" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#############" && \
echo "# Texinfo-4.7" && \
echo "#############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj texinfo-4.7.tar.bz2 && \
cd texinfo-4.7 && \
./configure --prefix=/tools && \
make && \
make install && \
echo "texinf" >> /mio
return $EXIT_SUCCESS
}

function bash_host()
{
echo "bash" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# Bash-2.05b" && \
echo "############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj bash-2.05b.tar.bz2 && \
cd bash-2.05b && \
patch -Np1 -i ../bash-2.05b-2.patch && \
./configure --prefix=/tools && \
make && \
make install && \
ln -s bash /tools/bin/sh && \
echo "bash" >> /mio
return $EXIT_SUCCESS
}

function utillinux_host()
{
echo "utli_lin" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##################" && \
echo "# Util-linux-2.12a" && \
echo "##################"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj util-linux-2.12a.tar.bz2 && \
cd util-linux-2.12a && \
cp configure configure.backup && \
sed "s@/usr/include@/tools/include@g" configure.backup > configure && \
./configure && \
make -C lib && \
make -C mount mount umount && \
make -C text-utils more && \
cp mount/{,u}mount text-utils/more /tools/bin && \
echo "utli_lin" >> /mio
return $EXIT_SUCCESS
}

function perl_host()
{
echo "perl" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# Perl-5.8.4" && \
echo "############"$(echo $COLOR_CYAN) && \
cd $LFS"/sources" && \
tar xfj perl-5.8.4.tar.bz2 && \
cd perl-5.8.4 && \
patch -Np1 -i ../perl-5.8.4-libc-1.patch && \
echo "uname -m" > /tools/bin/arch && \
chmod 755 /tools/bin/arch && \
./configure.gnu --prefix=/tools -Dstatic_ext='IO Fcntl POSIX' && \
make perl utilities && \
cp perl pod/pod2man /tools/bin && \
mkdir -p /tools/lib/perl5/5.8.4 && \
cp -R lib/* /tools/lib/perl5/5.8.4 && \
echo "perl" >> /mio
return $EXIT_SUCCESS
}

function makedev_lfs()
{
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# Make Devices " && \
echo "###############"$(echo $COLOR_CYAN) && \
echo "makedev" >> /mio
cd /sources && \
bzcat make_devices-1.2.bz2 > /dev/make_devices && \
chmod 754 /dev/make_devices && \
cd /dev && \
./make_devices && \
echo "makedev" >> /mio
return $EXIT_SUCCESS
}

function headers_lfs()
{
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# Linux Headers" && \
echo "###############"$(echo $COLOR_CYAN) && \
echo "header2" >> /mio
cp -a /tools/include/{asm,asm-generic,linux} /usr/include && \
touch /usr/include/linux/autoconf.h && \
sleep 1 && \
echo "header2" >> /mio
}
function manpage_lfs()
{
echo "manpage" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###############" && \
echo "# Man Pages    " && \
echo "###############"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj man-pages-1.66.tar.bz2 && cd man-pages-1.66 && \
make install && \
sleep 1 && \
echo "manpage" >> /mio && \
return $EXIT_SUCCESS
}

function glibc_lfs()
{
echo "glibclfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"########" && \
echo "# Glibc " && \
echo "########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj glibc-2.3.3-lfs-5.1.tar.bz2 && cd glibc-2.3.3-lfs-5.1 && \
mkdir ../glibc-build && \
cd ../glibc-build && \
../glibc-2.3.3-lfs-5.1/configure --prefix=/usr \
    --disable-profile --enable-add-ons=linuxthreads \
    --libexecdir=/usr/lib --with-headers=/usr/include \
    --without-cvs && \
make && \
if [[ $check_control = "true" ]]
then 
	echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	echo "# Make check in corso:  " && \
	echo "########################"$(echo $COLOR_CYAN)
	make check  
fi
# make check && \
touch /etc/ld.so.conf && \
make install && \
make localedata/install-locales && \
make -C ../glibc-2.3.3-lfs-5.1/linuxthreads/man && \
make -C ../glibc-2.3.3-lfs-5.1/linuxthreads/man install && \
echo "glibclfs" >> /mio
return $EXIT_SUCCES
}

function toolchain_lfs()
{
echo "toolchainlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#######################" && \
echo "# Regolazione Toolchain" && \
echo "#######################"$(echo $COLOR_CYAN) && \
cd /sources && \
cd binutils-build && \
make -C ld INSTALL=/tools/bin/install install && \
cd /sources && rm -rf binutils-build binutils-2.14 && \

SPECFILE=/tools/lib/gcc-lib/*/*/specs &&
sed -e 's@ /tools/lib/ld-linux.so.2@ /lib/ld-linux.so.2@g' \
    $SPECFILE > newspecfile &&
mv -f newspecfile $SPECFILE &&
unset SPECFILE && \

#echo 'main(){}' > dummy.c
#cc dummy.c
#readelf -l a.out | grep ': /lib'
#rm dummy.c a.out

echo "toolchainlfs" >> /mio
return $EXIT_SUCCESS
}

function binutils_lfs()
{
#SETTO LA VARIABILE CC
export CC="gcc -B/usr/bin"
echo "binutilslfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Binutils " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj binutils-2.14.tar.bz2 && cd binutils-2.14 && \
mkdir ../binutils-build && \
cd ../binutils-build && \
../binutils-2.14/configure --prefix=/usr --enable-shared && \
make tooldir=/usr && \
if [ $check_control = "true" ]
then 
	 echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	 echo "# Make check in corso:  " && \
	 echo "########################"$(echo $COLOR_CYAN)
	 make check  
fi
# make check && \
make tooldir=/usr install && \
cp ../binutils-2.14/include/libiberty.h /usr/include && \
echo "binutilslfs" >> /mio
return $EXIT_SUCCESS
}

function gcc_lfs()
{
echo "gcclfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# GCC      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj gcc-core-3.3.3.tar.bz2 && \
tar xfj gcc-g++-3.3.3.tar.bz2 && \
cd gcc-3.3.3 && \
patch -Np1 -i ../gcc-3.3.3-no_fixincludes-1.patch && \
sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in && \
mkdir ../gcc-build && \
cd ../gcc-build && \
../gcc-3.3.3/configure --prefix=/usr \
    --enable-shared --enable-threads=posix \
    --enable-__cxa_atexit --enable-clocale=gnu \
    --enable-languages=c,c++ && \
make && \
if [ $check_control = "true" ]
then 
	echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	echo "# Make check in corso:  " && \
	echo "########################"$(echo $COLOR_CYAN)
	 make -k check 
fi
# make -k check && \
make install && \
ln -s ../usr/bin/cpp /lib && \
ln -s gcc /usr/bin/cc && \
echo "gcclfs" >> /mio
return $EXIT_SUCCESS
}

function coreutils_lfs()
{
echo "coreutilslfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Coreutils" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj coreutils-5.2.1.tar.bz2 && cd coreutils-5.2.1 && \
patch -Np1 -i ../coreutils-5.2.1-uname-1.patch && \
patch -Np1 -i ../coreutils-5.2.1-hostname-1.patch && \
DEFAULT_POSIX2_VERSION=199209 ./configure --prefix=/usr && \
make && \
make install-root && \
touch /etc/mtab && \
echo "dummy1:x:1000" >> /etc/group && \
echo "dummy2:x:1001:dummy" >> /etc/group && \
echo "dummy:x:1000:1000:::/bin/bash" >> /etc/passwd && \
export NON_ROOT_USERNAME=dummy; make check-root && \

if [ $check_control = "true" ]
then
        echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
        echo "# Make check in corso:  " && \
        echo "########################"$(echo $COLOR_CYAN)
	su dummy -c "make RUN_EXPENSIVE_TESTS=yes check"
fi


#OCCHIO AL SU DUMMY!!!!!
#su dummy -c "make RUN_EXPENSIVE_TESTS=yes check" && \

sed -i.bak '/dummy/d' /etc/passwd /etc/group && \
make install && \
mv /usr/bin/{basename,cat,chgrp,chmod,chown,cp,dd,df} /bin && \
mv /usr/bin/{date,echo,false,head,install,ln,ls} /bin && \
mv /usr/bin/{mkdir,mknod,mv,pwd,rm,rmdir,sync} /bin && \
mv /usr/bin/{sleep,stty,su,test,touch,true,uname} /bin && \
mv /usr/bin/chroot /usr/sbin && \
rm /usr/bin/kill && \
ln -s test /bin/[ && \
ln -s ../../bin/install /usr/bin && \
echo "coreutilslfs" >> /mio && \
return $EXIT_SUCCESS
}

function zlib_lfs()
{
echo "zliblfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Zlib     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj zlib-1.2.1.tar.bz2 && cd zlib-1.2.1 && \
./configure --prefix=/usr --shared && \
make && \
make install && \
make clean && \
./configure --prefix=/usr && \
make && \
make install && \
chmod 644 /usr/lib/libz.a && \
mv /usr/lib/libz.so.* /lib && \
ln -sf ../../lib/libz.so.1 /usr/lib/libz.so && \
echo "zliblfs" >> /mio
return $EXIT_SUCCESS
}

function mktemp_lfs()
{
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Mktemp   " && \
echo "###########"$(echo $COLOR_CYAN) && \
echo "mktmplfs" >> /mio
cd /sources && \
tar xfj mktemp-1.5.tar.bz2 && cd mktemp-1.5 && \
patch -Np1 -i ../mktemp-1.5-add-tempfile-1.patch && \
./configure --prefix=/usr --with-libc && \
make && \
make install && \
make install-tempfile && \
echo "mktmplfs" >> /mio
}
function iana_lfs()
{
echo "iena" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Iana     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj iana-etc-1.00.tar.bz2 && cd iana-etc-1.00 && \
make &&
make install && \
echo "iena" >> /mio
}
function findutils_lfs()
{
echo "findlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Findutils" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj findutils-4.1.20.tar.bz2 && cd findutils-4.1.20 && \
./configure --prefix=/usr --libexecdir=/usr/lib/locate \
        --localstatedir=/var/lib/misc && \
make && \
make install && \
echo "findlfs" >> /mio
}

function gawk_lfs()
{
echo "gawklfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Gawk     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj gawk-3.1.3.tar.bz2 && cd gawk-3.1.3 && \
./configure --prefix=/usr --libexecdir=/usr/lib && \
make && \
make install && \
echo "gawklfs" >> /mio
}

function ncurses_lfs()
{
echo "ncurseslfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Ncurses  " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj ncurses-5.4.tar.bz2 && cd ncurses-5.4 && \
./configure --prefix=/usr --with-shared --without-debug && \
make && \
make install && \
chmod 755 /usr/lib/*.5.4 && \
chmod 644 /usr/lib/libncurses++.a && \
mv /usr/lib/libncurses.so.5* /lib && \
ln -sf ../../lib/libncurses.so.5 /usr/lib/libncurses.so && \
ln -sf libncurses.so /usr/lib/libcurses.so && \
echo "ncurseslfs" >> /mio
}

function vim_lfs()
{
echo "vimlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Vim      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj vim-6.2.tar.bz2 && cd vim62 && \
echo '#define SYS_VIMRC_FILE "/etc/vimrc"' >> src/feature.h && \
echo '#define SYS_GVIMRC_FILE "/etc/gvimrc"' >> src/feature.h && \
./configure --prefix=/usr && \
make && \
make install && \
ln -s vim /usr/bin/vi && \

cat > /etc/vimrc << "EOF"
" Begin /etc/vimrc

set nocompatible
set backspace=2
syntax on

" End /etc/vimrc
EOF
echo "vimlfs" >> /mio
}

function m4_lfs()
{
echo "m4lfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# M4       " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj m4-1.4.tar.bz2 && cd m4-1.4 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "m4lfs" >> /mio
}

function bison_lfs()
{
echo "bisonlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Bison    " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj bison-1.875.tar.bz2 && cd bison-1.875 && \
patch -Np1 -i ../bison-1.875-attribute.patch && \
./configure --prefix=/usr && \
make && \
make install && \
echo "bisonlfs" >> /mio
}

function less_lfs()
{
echo "lesslfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Less     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj less-382.tar.bz2 && cd less-382 && \
./configure --prefix=/usr --bindir=/bin --sysconfdir=/etc && \
make && \
make install && \
echo "lesslfs" >> /mio
}

function groff_lfs()
{
echo "grofflfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Groff     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj groff-1.19.tar.bz2 && cd groff-1.19 && \
PAGE=letter ./configure --prefix=/usr && \
make && \
make install && \
ln -s soelim /usr/bin/zsoelim && \
ln -s eqn /usr/bin/geqn && \
ln -s tbl /usr/bin/gtbl && \
echo "grofflfs" >> /mio
}
function sed_lfs()
{
echo "sedlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Sed      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj sed-4.0.9.tar.bz2 && cd sed-4.0.9 && \
./configure --prefix=/usr --bindir=/bin && \
make && \
make install && \
echo "sedlfs" >> /mio
}

function flex_lfs()
{
echo "flexlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Flex     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj flex-2.5.4a.tar.bz2 && cd flex-2.5.4 && \
./configure --prefix=/usr && 
make && 
make install && \
ln -s libfl.a /usr/lib/libl.a && \

cat > /usr/bin/lex << "EOF"
#!/bin/sh
# Begin /usr/bin/lex

exec /usr/bin/flex -l "$@"

# End /usr/bin/lex
EOF

chmod 755 /usr/bin/lex && \
echo "flexlfs" >> /mio
}

function gettext_lfs()
{
echo "gettxtlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Gettext  " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj gettext-0.14.1.tar.bz2 && cd gettext-0.14.1 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "gettxtlfs" >> /mio
}

function net_lfs()
{
echo "nettolfs " >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Net-tools" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj net-tools-1.60.tar.bz2 && cd net-tools-1.60 && \
patch -Np1 -i ../net-tools-1.60-miitool-gcc33-1.patch && \
yes "" | make config && \
make && \
make update && \
echo "nettolfs " >> /mio
}

function inetutils_lfs()
{
echo "inetlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Inetutils" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xjf inetutils-1.4.2.tar.bz2 && cd inetutils-1.4.2 && \
patch -Np1 -i ../inetutils-1.4.2-no_server_man_pages-1.patch && \
./configure --prefix=/usr --libexecdir=/usr/sbin \
    --sysconfdir=/etc --localstatedir=/var \
    --disable-logger --disable-syslogd \
    --disable-whois --disable-servers && \
make && \
make install && \
mv /usr/bin/ping /bin && \
echo "inetlfs" >> /mio
}

function perl_lfs()
{
echo "perllfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Perl     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj perl-5.8.4.tar.bz2 && cd perl-5.8.4 && \
./configure.gnu --prefix=/usr -Dpager="/bin/less -isR" && \
make && \
echo "127.0.0.1 localhost $(hostname)" > /etc/hosts && \
if [[ $check_control = "true" ]]
then 
	 echo $(echo $COLOR_GREEN_LIGHT)"########################" && \
	 echo "# Make check in corso:  " && \
	 echo "########################"$(echo $COLOR_CYAN)
	 make test  
fi
# make test && \
make install && \
echo "perllfs" >> /mio
}

function texinfo_lfs()
{
echo "textinfo" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Texinfo  " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj texinfo-4.7.tar.bz2 && cd texinfo-4.7 && \
./configure --prefix=/usr && \
make && \
make install && \
make TEXMF=/usr/share/texmf install-tex && \
cd /usr/share/info && \
rm dir && \
for f in *
do install-info $f dir 2>/dev/null
done
echo "textinfo" >> /mio
}

function autoconf_lfs()
{
#### DA VEDERE COME SISTEMARLA ######
#export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
echo "autocnflfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Autoconf " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj autoconf-2.59.tar.bz2 && cd autoconf-2.59 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "autocnflfs" >> /mio
}

function automake_lfs()
{
echo "automakelfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Automake " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj automake-1.8.4.tar.bz2 && cd automake-1.8.4 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "automakelfs" >> /mio
}

function bash_lfs()
{
echo "bashlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Bash     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj bash-2.05b.tar.bz2 && cd bash-2.05b && \
patch -Np1 -i ../bash-2.05b-2.patch && \
./configure --prefix=/usr --bindir=/bin && \
make && \
make install && \
echo "bashlfs" >> /mio
}

function file_lfs()
{
echo "filelfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##########" && \
echo "# File    " && \
echo "##########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj file-4.09.tar.bz2 && cd file-4.09 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "filelfs" >> /mio
}

function libtool_lfs()
{
echo "libtoolfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##########" && \
echo "# Libtool " && \
echo "##########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj libtool-1.5.6.tar.bz2 && cd libtool-1.5.6 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "libtoolfs" >> /mio
}

function bzip2_lfs()
{
echo "bzip2lfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##########" && \
echo "# Bzip2   " && \
echo "##########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj bzip2-1.0.2.tar.bz2 && cd bzip2-1.0.2 && \
make -f Makefile-libbz2_so && \
make clean && \
make && \
make install && \
cp bzip2-shared /bin/bzip2 && \
cp -a libbz2.so* /lib && \
ln -s ../../lib/libbz2.so.1.0 /usr/lib/libbz2.so && \
rm /usr/bin/{bunzip2,bzcat,bzip2} && \
mv /usr/bin/{bzip2recover,bzless,bzmore} /bin && \
ln -s bzip2 /bin/bunzip2 && \
ln -s bzip2 /bin/bzcat && \
echo "bzip2lfs" >> /mio
}

function diffutils_lfs()
{
echo "difflfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Diffutils" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj diffutils-2.8.1.tar.bz2 && cd diffutils-2.8.1 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "difflfs" >> /mio
}

function ed_lfs()
{
echo "edlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Ed       " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj ed-0.2.tar.bz2 && cd ed-0.2 && \
patch -Np1 -i ../ed-0.2-mkstemp.patch && \
./configure --prefix=/usr --exec-prefix="" && \
make && \
make install && \
echo "edlfs" >> /mio
}

function kbd_lfs()
{
echo "kbdlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Kbd      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj kbd-1.12.tar.bz2 && cd kbd-1.12 && \
patch -Np1 -i ../kbd-1.12-more-programs-1.patch && \
./configure && \
make && \
make install && \
echo "kbdlfs" >> /mio
######################################
# KEYMAP DI DEFAULT METTE LA INGLESE #
##############################################################
# ln -s path/to/keymap /usr/share/kbd/keymaps/defkeymap.map.gz
##############################################################
}

function e2fs_lfs()
{
echo "e2lfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# E2fsprogs" && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj e2fsprogs-1.35.tar.bz2 && cd e2fsprogs-1.35 && \
mkdir ../e2fsprogs-build && \
cd ../e2fsprogs-build && \
../e2fsprogs-1.35/configure --prefix=/usr --with-root-prefix="" \
    --enable-elf-shlibs && \
make && \
make install && \
make install-libs && \
echo "e2lfs" >> /mio
}

function grep_lfs()
{
echo "greplfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Grep     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj grep-2.5.1.tar.bz2 && cd grep-2.5.1 && \
./configure --prefix=/usr --bindir=/bin --with-included-regex && \
make && \
make install && \
echo "greplfs" >> /mio
}

function grub_lfs()
{
echo "grublfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Grub     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj grub-0.94.tar.bz2 && cd grub-0.94 && \
./configure --prefix=/usr && \
make install && \
mkdir /boot/grub && \
cp /usr/share/grub/i386-pc/* /boot/grub && \
echo "grublfs" >> /mio
}

function gzip2_lfs()
{
echo "gzi2lfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Gzip     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj gzip-1.3.5.tar.bz2 && cd gzip-1.3.5 && \
./configure --prefix=/usr && \
cp gzexe.in{,.backup} && \
sed 's%"BINDIR"%/bin%' gzexe.in.backup > gzexe.in && \
make && \
make install && \
mv /usr/bin/gzip /bin && \
rm /usr/bin/{gunzip,zcat} && \
ln -s gzip /bin/gunzip && \
ln -s gzip /bin/zcat && \
ln -s gunzip /bin/uncompress && \
echo "gzi2lfs" >> /mio
}

function man_lfs()
{
echo "manlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Man      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj man-1.5m2.tar.bz2 && cd man-1.5m2 && \
patch -Np1 -i ../man-1.5m2-80cols.patch && \
sed -i 's/-is/&R/' configure && \
sed -i 's%MANPATH./usr/man%#&%' src/man.conf.in && \
./configure -default -confdir=/etc && \
make && \
make install && \
echo "manlfs" >> /mio
}

function make_lfs()
{
echo "makelfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Make     " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj make-3.80.tar.bz2 && cd make-3.80 && \
./configure --prefix=/usr && \
make && \
make install && \
echo "makelfs" >> /mio
}

function mod_lfs()
{
echo "modlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Modutils " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj modutils-2.4.27.tar.bz2 && cd modutils-2.4.27 && \
./configure && \
make && \
make install && \
echo "modlfs" >> /mio
}

function patch_lfs()
{
echo "patchlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Patch    " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj patch-2.5.4.tar.bz2 && cd patch-2.5.4 && \
CPPFLAGS=-D_GNU_SOURCE ./configure --prefix=/usr && \
make && \
make install && \
echo "patchlfs" >> /mio
}

function procinfo_lfs()
{
echo "procilfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Procinfo " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj procinfo-18.tar.bz2 && cd procinfo-18 && \
make LDLIBS=-lncurses && \
make install && \
echo "procilfs" >> /mio
}

function proc_lfs()
{
echo "proclfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Procps   " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj procps-3.2.1.tar.bz2 && cd procps-3.2.1 && \
make && \
make install && \
rm /lib/libproc.so && \
echo "proclfs" >> /mio
}

function psmisc_lfs()
{
echo "psmisclfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Psmisc   " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj psmisc-21.4.tar.bz2 && cd psmisc-21.4 && \
./configure --prefix=/usr --exec-prefix=/ && \
make && \
make install && \
mv /bin/pstree* /usr/bin && \
ln -sf pstree /usr/bin/pstree.x11 && \
ln -s killall /bin/pidof && \
echo "psmisclfs" >> /mio
}

function shadow_lfs()
{
echo "shadowlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Shadow   " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj shadow-4.0.4.1.tar.bz2 && cd shadow-4.0.4.1 && \
touch /usr/bin/passwd && \
./configure --libdir=/usr/lib --enable-shared && \
echo '#define HAVE_SETLOCALE 1' >> config.h && \
make && \
make install && \
cp etc/{limits,login.access} /etc && \

sed -e 's%#MD5_CRYPT_ENAB.no%MD5_CRYPT_ENAB yes%' \
    -e 's%/var/spool/mail%/var/mail%' \
    etc/login.defs.linux > /etc/login.defs && \

mv /bin/sg /usr/bin && \
mv /bin/vigr /usr/sbin && \
mv /usr/lib/lib{shadow,misc}.so.0* /lib && \
ln -sf ../../lib/libshadow.so.0 /usr/lib/libshadow.so && \
ln -sf ../../lib/libmisc.so.0 /usr/lib/libmisc.so && \
mkdir /etc/default && \
rm /bin/groups && \
pwconv && \
grpconv && \
clear && \
echo $(echo $COLOR_GREEN_LIGHT)"Impostare adesso la password di root"$(echo $REPLACE) && \
passwd root && \
echo "shadowlfs" >> /mio
}

function syslo_lfs()
{
echo "syslfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Sysklogd " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj sysklogd-1.4.1.tar.bz2 && cd sysklogd-1.4.1 && \
make && \
make install && \

cat > /etc/syslog.conf << "EOF"
# Begin /etc/syslog.conf

auth,authpriv.* -/var/log/auth.log
*.*;auth,authpriv.none -/var/log/sys.log
daemon.* -/var/log/daemon.log
kern.* -/var/log/kern.log
mail.* -/var/log/mail.log
user.* -/var/log/user.log
*.emerg *

# End /etc/syslog.conf
EOF
echo "syslfs" >> /mio
}

function sysvinit_lfs()
{
echo "sysvinit" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Sysvinit " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj sysvinit-2.85.tar.bz2 && cd sysvinit-2.85 && \
cp src/init.c{,.backup} && \
sed 's/Sending processes/& started by init/g' \
    src/init.c.backup > src/init.c && \
make -C src && \
make -C src install && \
cat > /etc/inittab << "EOF"
# Begin /etc/inittab

id:3:initdefault:

si::sysinit:/etc/rc.d/init.d/rc sysinit

l0:0:wait:/etc/rc.d/init.d/rc 0
l1:S1:wait:/etc/rc.d/init.d/rc 1
l2:2:wait:/etc/rc.d/init.d/rc 2
l3:3:wait:/etc/rc.d/init.d/rc 3
l4:4:wait:/etc/rc.d/init.d/rc 4
l5:5:wait:/etc/rc.d/init.d/rc 5
l6:6:wait:/etc/rc.d/init.d/rc 6

ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now

su:S016:once:/sbin/sulogin

1:2345:respawn:/sbin/agetty tty1 9600
2:2345:respawn:/sbin/agetty tty2 9600
3:2345:respawn:/sbin/agetty tty3 9600
4:2345:respawn:/sbin/agetty tty4 9600
5:2345:respawn:/sbin/agetty tty5 9600
6:2345:respawn:/sbin/agetty tty6 9600

# End /etc/inittab
EOF
echo "sysvinit" >> /mio
}

function tar_lfs()
{
echo "tarlfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"###########" && \
echo "# Tar      " && \
echo "###########"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj tar-1.13.94.tar.bz2 && cd tar-1.13.94 && \
./configure --prefix=/usr --bindir=/bin --libexecdir=/usr/sbin && \
make && \
make install && \
echo "tarlfs" >> /mio
}

function util_lfs()
{
echo "utillfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# Util-linux" && \
echo "############"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj util-linux-2.12a.tar.bz2 && cd util-linux-2.12a && \
cp hwclock/hwclock.c{,.backup} && \
sed 's%etc/adjtime%var/lib/hwclock/adjtime%' \
    hwclock/hwclock.c.backup > hwclock/hwclock.c && \
mkdir -p /var/lib/hwclock && \
./configure && \
make HAVE_KILL=yes HAVE_SLN=yes && \
make HAVE_KILL=yes HAVE_SLN=yes install && \
echo "utillfs" >> /mio
}

function gcc2_lfs()
{
echo "gcc2lfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"############" && \
echo "# GCC-2.95.3" && \
echo "############"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj gcc-2.95.3.tar.bz2 && cd gcc-2.95.3 && \
patch -Np1 -i ../gcc-2.95.3-2.patch && \
patch -Np1 -i ../gcc-2.95.3-no-fixinc.patch && \
patch -Np1 -i ../gcc-2.95.3-returntype-fix.patch && \
echo timestamp > gcc/cstamp-h.in && \
mkdir ../gcc-2-build && \
cd ../gcc-2-build && \
../gcc-2.95.3/configure --prefix=/opt/gcc-2.95.3 \
    --enable-shared --enable-languages=c \
    --enable-threads=posix && \
make bootstrap && \
make install && \

#
echo "gcc2lfs" >> /mio
}

function bootscript_lfs()
{
echo "bootscript" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"#################" && \
echo "# LFS-Bootscripts" && \
echo "#################"$(echo $COLOR_CYAN) && \
cd /sources && \
tar xfj lfs-bootscripts-2.0.5.tar.bz2 && cd lfs-bootscripts-2.0.5 && \
make install && \
sleep 2 && \
echo "bootscript" >> /mio
}

function scriptclock_lfs()
{
echo "scriptclklfs" >> /mio
echo $(echo $COLOR_GREEN_LIGHT)"##################" && \
echo "# Script Setclock " && \
echo "##################"$(echo $COLOR_CYAN) && \
cd /sources && \
cat > /etc/sysconfig/clock << "EOF"
# Begin /etc/sysconfig/clock

UTC=1

# End /etc/sysconfig/clock
EOF
sleep 2 &&\
echo "scriptclklfs" >> /mio
}

function kernel_lfs()
{
clear && \
echo $(echo $COLOR_GREEN_LIGHT)"###################" && \
echo "# Installing Kernel" && \
echo "###################"$(echo $COLOR_CYAN) && \
echo "" && \
cd /usr/src && \
tar xfj /sources/linux-2.4.26.tar.bz2 && \
ln -s linux-2.4.26 linux && \
cd linux && \
# make mrproper && \
mv /defconfig ./config && \
echo $(echo $COLOR_GREEN_LIGHT)"Now you must compile the linux kernel..." && \
echo "We can leave you a pre-configured default config-file. If you want to use it" && \
echo "you must go in 'Load An Alternate Configuration File' and write './config'." && \
echo "If you want to edit the kernel by your hand you can do it without" && \
echo "any problems. At the end, exit and save the config just created."$(echo $REPLACE) && \
risp="f"
while [[ $risp = "f" || $risp = "n" ]] ; do
	echo $(echo $COLOR_GREEN_LIGHT)"Press Enter To Continue"$(echo $REPLACE)
	risp=$(read_risp)
done
echo ""$(echo $COLOR_CYAN) 	
make menuconfig && \

#####################################################
## LA PARTE QUI SOTTO PROBABILMENTE NON APPARIRA' MAI
## QUINDI ANDRA' MESSA IN UNO SCRIPT A PARTE E FATTA 
## LANCIARE DOPO IL MENUCONFIG!!!!
#####################################################
make CC=/opt/gcc-2.95.3/bin/gcc dep && \
make CC=/opt/gcc-2.95.3/bin/gcc bzImage && \
make CC=/opt/gcc-2.95.3/bin/gcc modules && \
make CC=/opt/gcc-2.95.3/bin/gcc modules_install && \
make mandocs && \
cp -a Documentation/man /usr/share/man/man9 && \
cp arch/i386/boot/bzImage /boot/lfskernel && \
cp System.map /boot && \
cp .config /boot/config-lfskernel && \
echo "" && \
clear && \
echo "kernel ok " >> /mio
}
